definitions:
  app.Article:
    properties:
      content:
        type: string
      createdAt:
        description: 创建时间
        type: string
      desc:
        type: string
      id:
        description: 主键ID
        type: integer
      is_important:
        type: integer
      reading_quantity:
        type: integer
      state:
        type: integer
      tags:
        description: 多对多 article_tag
        items:
          $ref: '#/definitions/app.Tag'
        type: array
      title:
        type: string
      updatedAt:
        description: 更新时间
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
      user_id:
        type: integer
    type: object
  app.BaseMessage:
    properties:
      copyright:
        type: string
      createdAt:
        description: 创建时间
        type: string
      head_img:
        type: string
      id:
        description: 主键ID
        type: integer
      introduction:
        type: string
      link:
        type: string
      record_info:
        type: string
      title:
        type: string
      updatedAt:
        description: 更新时间
        type: string
      user_id:
        type: integer
    type: object
  app.Comment:
    properties:
      article:
        $ref: '#/definitions/app.Article'
      article_id:
        type: integer
      children:
        items:
          $ref: '#/definitions/app.Comment'
        type: array
      content:
        type: string
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      parent_id:
        type: integer
      to_user:
        $ref: '#/definitions/system.SysUser'
      to_user_id:
        description: 作为外键 关联User
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      user:
        allOf:
        - $ref: '#/definitions/system.SysUser'
        description: foreignKey是管联UserId的SysUser的表
      user_id:
        description: 作为外键 关联User
        type: integer
    type: object
  app.FileUploadAndDownload:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 编号
        type: string
      name:
        description: 文件名
        type: string
      tag:
        description: 文件标签
        type: string
      updatedAt:
        description: 更新时间
        type: string
      url:
        description: 文件地址
        type: string
    type: object
  app.Praise:
    properties:
      comment_id:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      user_id:
        type: integer
    type: object
  app.Tag:
    properties:
      articles:
        items:
          $ref: '#/definitions/app.Article'
        type: array
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      status:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  app.User:
    properties:
      content:
        type: string
      createdAt:
        description: 创建时间
        type: string
      headImg:
        type: string
      header:
        type: string
      id:
        description: 主键ID
        type: integer
      introduction:
        type: string
      name:
        type: string
      password:
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  config.AliyunOSS:
    properties:
      access-key-id:
        type: string
      access-key-secret:
        type: string
      base-path:
        type: string
      bucket-name:
        type: string
      bucket-url:
        type: string
      endpoint:
        type: string
    type: object
  config.Autocode:
    properties:
      root:
        type: string
      server:
        type: string
      server-api:
        type: string
      server-initialize:
        type: string
      server-model:
        type: string
      server-request:
        type: string
      server-router:
        type: string
      server-service:
        type: string
      transfer-restart:
        type: boolean
      web:
        type: string
      web-api:
        type: string
      web-form:
        type: string
      web-table:
        type: string
    type: object
  config.AwsS3:
    properties:
      base-url:
        type: string
      bucket:
        type: string
      disable-ssl:
        type: boolean
      endpoint:
        type: string
      path-prefix:
        type: string
      region:
        type: string
      s3-force-path-style:
        type: boolean
      secret-id:
        type: string
      secret-key:
        type: string
    type: object
  config.CORS:
    properties:
      mode:
        type: string
      whitelist:
        items:
          $ref: '#/definitions/config.CORSWhitelist'
        type: array
    type: object
  config.CORSWhitelist:
    properties:
      allow-credentials:
        type: boolean
      allow-headers:
        type: string
      allow-methods:
        type: string
      allow-origin:
        type: string
      expose-headers:
        type: string
    type: object
  config.Cache:
    properties:
      time:
        description: 时间
        type: integer
    type: object
  config.Captcha:
    properties:
      dot-count:
        description: 干扰点数量
        type: integer
      img-height:
        description: 验证码高度
        type: integer
      img-width:
        description: 验证码宽度
        type: integer
      key-long:
        description: 验证码长度
        type: integer
      max-skew:
        description: 最大倾斜度
        type: number
    type: object
  config.Casbin:
    properties:
      model-path:
        description: 存放casbin模型的相对路径
        type: string
    type: object
  config.DB:
    properties:
      alias-name:
        description: 佚名
        type: string
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      disable:
        type: boolean
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      type:
        description: db 类型
        type: string
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Detail:
    properties:
      compareField:
        description: 需要比较时间的字段
        type: string
      interval:
        description: 时间间隔
        type: string
      tableName:
        description: 需要清理的表名
        type: string
    type: object
  config.Excel:
    properties:
      dir:
        description: 文件路径
        type: string
    type: object
  config.HuaWeiObs:
    properties:
      access-key:
        type: string
      bucket:
        type: string
      endpoint:
        type: string
      path:
        type: string
      secret-key:
        type: string
    type: object
  config.Local:
    properties:
      path:
        description: 本地文件路径
        type: string
      size:
        description: 本地文件大小限制
        type: integer
    type: object
  config.Mysql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      debug:
        description: 是否开启debug
        type: boolean
      log-mode:
        description: 开启Gorm全局日志 写入日志的格式
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址
        type: string
      port:
        description: 端口
        type: string
      skip-transaction:
        description: 是否跳过默认事务
        type: boolean
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Pgsql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      port:
        description: :端口
        type: string
      username:
        description: 数据库用户名
        type: string
    type: object
  config.PrivacyJWT:
    properties:
      buffer-time:
        description: 缓冲时间
        type: integer
      expires-time:
        description: 过期时间
        type: integer
      issuer:
        description: 签发者
        type: string
      signing-key:
        description: 签名密钥 HS256使用
        type: string
    type: object
  config.Qiniu:
    properties:
      access-key:
        description: 秘钥AK
        type: string
      bucket:
        description: 空间名称
        type: string
      img-path:
        description: CDN加速域名
        type: string
      secret-key:
        description: 秘钥SK
        type: string
      use-cdn-domains:
        description: 上传是否使用CDN上传加速
        type: boolean
      use-https:
        description: 是否使用https
        type: boolean
      zone:
        description: 存储区域
        type: string
    type: object
  config.Redis:
    properties:
      addr:
        description: 服务器地址:端口
        type: string
      db:
        description: redis的哪个数据库
        type: integer
      password:
        description: 密码
        type: string
      port:
        description: 端口
        type: string
    type: object
  config.Server:
    properties:
      aliyun-oss:
        $ref: '#/definitions/config.AliyunOSS'
      autocode:
        allOf:
        - $ref: '#/definitions/config.Autocode'
        description: auto
      aws-s3:
        $ref: '#/definitions/config.AwsS3'
      cache:
        allOf:
        - $ref: '#/definitions/config.Cache'
        description: 缓存
      captcha:
        allOf:
        - $ref: '#/definitions/config.Captcha'
        description: 验证码配置
      casbin:
        $ref: '#/definitions/config.Casbin'
      cors:
        allOf:
        - $ref: '#/definitions/config.CORS'
        description: 跨域配置
      db-list:
        items:
          $ref: '#/definitions/config.DB'
        type: array
      email:
        allOf:
        - $ref: '#/definitions/server-fiber_config.Email'
        description: email
      excel:
        $ref: '#/definitions/config.Excel'
      hua-wei-obs:
        $ref: '#/definitions/config.HuaWeiObs'
      jwt:
        allOf:
        - $ref: '#/definitions/config.PrivacyJWT'
        description: JWT
      local:
        allOf:
        - $ref: '#/definitions/config.Local'
        description: oss
      mysql:
        allOf:
        - $ref: '#/definitions/config.Mysql'
        description: gorm
      pgsql:
        $ref: '#/definitions/config.Pgsql'
      qiniu:
        $ref: '#/definitions/config.Qiniu'
      redis:
        allOf:
        - $ref: '#/definitions/config.Redis'
        description: Redis
      sqlite:
        $ref: '#/definitions/config.Sqlite'
      system:
        $ref: '#/definitions/config.System'
      tencent-cos:
        $ref: '#/definitions/config.TencentCOS'
      timer:
        allOf:
        - $ref: '#/definitions/config.Timer'
        description: 任务配置
      zap:
        allOf:
        - $ref: '#/definitions/config.Zap'
        description: zap 压缩
    type: object
  config.Sqlite:
    properties:
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      path:
        description: 文件路径
        type: string
    type: object
  config.System:
    properties:
      addr:
        description: 端口值
        type: integer
      db-type:
        description: 数据库类型:mysql(默认)|sqlite|sqlserver|postgresql
        type: string
      domain:
        description: 域名
        type: string
      env:
        description: 环境值
        type: string
      iplimit-count:
        description: 访问次数限制
        type: integer
      iplimit-time:
        description: 访问时间限制
        type: integer
      oss-type:
        description: Oss类型
        type: string
      use-multipoint:
        description: 多点登录拦截
        type: boolean
      use-redis:
        description: 使用redis
        type: boolean
    type: object
  config.Task:
    properties:
      interval:
        description: 时间间隔 秒
        type: string
      output:
        description: 输出
        type: string
      taskName:
        description: 执行任务名
        type: string
    type: object
  config.TencentCOS:
    properties:
      base-url:
        type: string
      bucket:
        type: string
      path-prefix:
        type: string
      region:
        type: string
      secret-id:
        type: string
      secret-key:
        type: string
    type: object
  config.Timer:
    properties:
      detail:
        description: '任务: 清除数据库'
        items:
          $ref: '#/definitions/config.Detail'
        type: array
      spec:
        description: CRON表达式
        type: string
      start:
        description: 是否启用
        type: boolean
      tasks:
        description: 任务： 执行任务
        items:
          $ref: '#/definitions/config.Task'
        type: array
    type: object
  config.Zap:
    properties:
      director:
        description: 日志文件夹
        type: string
      encode-level:
        description: 编码级
        type: string
      format:
        description: 输出
        type: string
      level:
        description: 级别
        type: string
      log-in-console:
        description: 输出控制台
        type: boolean
      prefix:
        description: 日志前缀
        type: string
      show-line:
        description: 显示行
        type: boolean
      stacktrace-key:
        description: 栈名
        type: string
    type: object
  example.ExaCustomer:
    properties:
      createdAt:
        description: 创建时间
        type: string
      customerName:
        description: 客户名
        type: string
      customerPhoneData:
        description: 客户手机号
        type: string
      id:
        description: 主键ID
        type: integer
      sysUser:
        allOf:
        - $ref: '#/definitions/system.SysUser'
        description: 管理详情
      sysUserAuthorityID:
        description: 管理角色ID
        type: string
      sysUserId:
        description: 管理ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  example.ExaFile:
    properties:
      chunk_total:
        type: integer
      createdAt:
        description: 创建时间
        type: string
      exa_file_chunk:
        description: 切片结构体
        items:
          $ref: '#/definitions/example.ExaFileChunk'
        type: array
      file_md5:
        type: string
      file_name:
        type: string
      file_path:
        type: string
      id:
        description: 主键ID
        type: integer
      is_finish:
        type: boolean
      updatedAt:
        description: 更新时间
        type: string
    type: object
  example.ExaFileChunk:
    properties:
      createdAt:
        description: 创建时间
        type: string
      exaFileID:
        type: integer
      fileChunkNumber:
        type: integer
      fileChunkPath:
        type: string
      id:
        description: 主键ID
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  example.ExaFileUploadAndDownload:
    properties:
      createdAt:
        description: 创建时间
        type: string
      height:
        description: 图片高度
        type: integer
      id:
        description: 主键ID
        type: integer
      is_cropper:
        description: 1 后台图片 2 后台截图 3 前台图片 4 mobile 图片
        type: integer
      key:
        description: 编号
        type: string
      name:
        description: 文件名
        type: string
      proportion:
        description: 图片长宽比例
        type: number
      tag:
        description: 文件标签
        type: string
      updatedAt:
        description: 更新时间
        type: string
      url:
        description: 文件地址
        type: string
      width:
        description: 图片宽度
        type: integer
    type: object
  example.ExcelInfo:
    properties:
      fileName:
        description: 文件名
        type: string
      infoList:
        items:
          $ref: '#/definitions/example.FielUploadImport'
        type: array
    type: object
  example.FielUploadImport:
    properties:
      createdAt:
        description: 创建时间
        type: string
      file_path:
        description: 文件路径
        type: string
      file_size:
        description: 文件大小
        type: integer
      file_type:
        description: 文件类型
        type: string
      filename:
        description: 文件名
        type: string
      filename_md5:
        description: 文件名md5
        type: string
      id:
        description: 主键ID
        type: integer
      state:
        description: 状态
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  frontend.ArticleUser:
    properties:
      createdAt:
        description: 创建时间
        type: string
      headerImg:
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        type: string
      updatedAt:
        description: 更新时间
        type: string
      userName:
        type: string
    type: object
  mobile.Login:
    properties:
      password:
        type: string
      realname:
        type: string
      username:
        type: string
    type: object
  mobile.MobileUser:
    properties:
      avatar:
        type: string
      content:
        type: string
      cover:
        type: string
      createdAt:
        description: 创建时间
        type: string
      gender:
        type: integer
      id:
        description: 主键ID
        type: integer
      industry:
        description: Password string `json:"password" form:"password" gorm:"column:password;comment:密码;size:100;"`
        type: integer
      nickname:
        type: string
      phone:
        type: string
      realname:
        type: string
      sign:
        type: string
      updatedAt:
        description: 更新时间
        type: string
      username:
        type: string
    type: object
  mobile.Register:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      password:
        type: string
      phone:
        type: string
      realname:
        type: string
      updatedAt:
        description: 更新时间
        type: string
      username:
        type: string
    type: object
  request.AddMenuAuthorityInfo:
    properties:
      authorityId:
        description: 角色ID
        type: string
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
    type: object
  request.CasbinInReceive:
    properties:
      authorityId:
        description: 权限id
        type: string
      casbinInfos:
        items:
          $ref: '#/definitions/request.CasbinInfo'
        type: array
    type: object
  request.CasbinInfo:
    properties:
      method:
        description: 方法
        type: string
      path:
        description: 路径
        type: string
    type: object
  request.ChangePasswordStruct:
    properties:
      newPassword:
        description: 新密码
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.GetById:
    properties:
      id:
        description: 主键ID
        type: integer
    type: object
  request.IdsReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  request.InitDB:
    properties:
      dbName:
        description: 数据库名
        type: string
      dbType:
        description: 数据库类型
        type: string
      host:
        description: 服务器地址
        type: string
      password:
        description: 数据库密码
        type: string
      port:
        description: 数据库连接端口
        type: string
      userName:
        description: 数据库用户名
        type: string
    type: object
  request.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.LoginToken:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.MobileUpdate:
    properties:
      field:
        type: string
      value: {}
    type: object
  request.MobileUpdatePassword:
    properties:
      id:
        type: integer
      newPassword:
        type: string
      password:
        type: string
    type: object
  request.PageInfo:
    properties:
      is_cropper:
        description: 是否为截图 1, 或 2
        type: string
      keyword:
        description: 关键字
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      proportion:
        type: string
    type: object
  request.Register:
    properties:
      authorityId:
        type: string
      authorityIds:
        items:
          type: string
        type: array
      email:
        type: string
      headerImg:
        type: string
      nickName:
        type: string
      passWord:
        type: string
      phone:
        type: string
      userName:
        type: string
    type: object
  request.RollBack:
    properties:
      deleteTable:
        description: 是否删除表
        type: boolean
      id:
        description: 主键ID
        type: integer
    type: object
  request.SearchApiParams:
    properties:
      api_group:
        description: api组
        type: string
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 排序方式:升序false(默认)|降序true
        type: string
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      is_cropper:
        description: 是否为截图 1, 或 2
        type: string
      keyword:
        description: 关键字
        type: string
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      orderKey:
        description: 排序
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      path:
        description: api路径
        type: string
      proportion:
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.SetUserAuth:
    properties:
      authorityId:
        description: 角色ID
        type: string
    type: object
  request.SetUserAuthorities:
    properties:
      authorityIds:
        description: 角色ID
        items:
          type: string
        type: array
      id:
        type: integer
    type: object
  request.SysAuthorityBtnReq:
    properties:
      authorityId:
        type: string
      menuID:
        type: integer
      selected:
        items:
          type: integer
        type: array
    type: object
  request.SysAutoHistory:
    properties:
      is_cropper:
        description: 是否为截图 1, 或 2
        type: string
      keyword:
        description: 关键字
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
      proportion:
        type: string
    type: object
  response.Email:
    properties:
      body:
        description: 邮件内容
        type: string
      subject:
        description: 邮件标题
        type: string
      to:
        description: 邮件发送给谁
        type: string
    type: object
  response.ExaCustomerResponse:
    properties:
      customer:
        $ref: '#/definitions/example.ExaCustomer'
    type: object
  response.ExaFileResponse:
    properties:
      file:
        $ref: '#/definitions/example.ExaFileUploadAndDownload'
    type: object
  response.FilePathResponse:
    properties:
      filePath:
        type: string
    type: object
  response.FileResponse:
    properties:
      file:
        $ref: '#/definitions/example.ExaFile'
    type: object
  response.PageResult:
    properties:
      list: {}
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  response.ResponseUploadFile:
    properties:
      file:
        $ref: '#/definitions/app.FileUploadAndDownload'
    type: object
  response.SysAuthorityBtnRes:
    properties:
      selected:
        items:
          type: integer
        type: array
    type: object
  response.SysAuthorityCopyResponse:
    properties:
      authority:
        $ref: '#/definitions/system.SysAuthority'
      oldAuthorityId:
        description: 旧角色ID
        type: string
    type: object
  response.SysAuthorityResponse:
    properties:
      authority:
        $ref: '#/definitions/system.SysAuthority'
    type: object
  response.SysBaseMenuResponse:
    properties:
      menu:
        $ref: '#/definitions/system.SysBaseMenu'
    type: object
  response.SysCaptchaResponse:
    properties:
      captchaId:
        type: string
      captchaLength:
        type: integer
      picPath:
        type: string
    type: object
  server-fiber_config.Email:
    properties:
      from:
        description: 收件人
        type: string
      host:
        description: 服务器地址
        type: string
      is-ssl:
        description: 是否SSL
        type: boolean
      nickname:
        description: 昵称
        type: string
      port:
        description: 端口
        type: integer
      secret:
        description: 密钥
        type: string
      to:
        description: 收件人:多个以英文逗号分隔
        type: string
    type: object
  server-fiber_model_frontend.Article:
    properties:
      content:
        type: string
      createdAt:
        description: 创建时间
        type: string
      desc:
        type: string
      id:
        description: 主键ID
        type: integer
      is_important:
        type: integer
      reading_quantity:
        type: integer
      state:
        type: integer
      tags:
        items:
          $ref: '#/definitions/server-fiber_model_frontend.Tag'
        type: array
      title:
        type: string
      updatedAt:
        description: 更新时间
        type: string
      user:
        $ref: '#/definitions/frontend.ArticleUser'
      user_id:
        type: integer
    type: object
  server-fiber_model_frontend.Comment:
    properties:
      article:
        $ref: '#/definitions/server-fiber_model_frontend.Article'
      article_id:
        type: integer
      children:
        items:
          $ref: '#/definitions/server-fiber_model_frontend.Comment'
        type: array
      content:
        type: string
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      parent_id:
        type: integer
      to_user:
        $ref: '#/definitions/server-fiber_model_frontend.User'
      to_user_id:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      user:
        $ref: '#/definitions/server-fiber_model_frontend.User'
      user_id:
        type: integer
    type: object
  server-fiber_model_frontend.Tag:
    properties:
      aritcles:
        items:
          $ref: '#/definitions/server-fiber_model_frontend.Article'
        type: array
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      status:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  server-fiber_model_frontend.User:
    properties:
      activeColor:
        description: 活跃颜色
        type: string
      authorityId:
        description: 用户角色ID
        type: string
      baseColor:
        description: 基础颜色
        type: string
      content:
        type: string
      createdAt:
        description: 创建时间
        type: string
      email:
        description: 用户邮箱
        type: string
      head_img:
        type: string
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      introduction:
        type: string
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 用户手机号
        type: string
      sideMode:
        description: 用户侧边主题
        type: string
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户登录名
        type: string
    type: object
  server-fiber_model_system_response.LoginResponse:
    properties:
      expiresAt:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
    type: object
  system.AutoCodeStruct:
    properties:
      abbreviation:
        description: Struct简称
        type: string
      autoCreateApiToSql:
        description: 是否自动创建api
        type: boolean
      autoMoveFile:
        description: 是否自动移动文件
        type: boolean
      description:
        description: Struct中文名称
        type: string
      fields:
        items:
          $ref: '#/definitions/system.Field'
        type: array
      humpPackageName:
        description: go文件名称
        type: string
      package:
        type: string
      packageName:
        description: 文件名称
        type: string
      structName:
        description: Struct名称
        type: string
      tableName:
        description: 表名
        type: string
    type: object
  system.Field:
    properties:
      columnName:
        description: 数据库字段
        type: string
      comment:
        description: 数据库字段描述
        type: string
      dataTypeLong:
        description: 数据库字段长度
        type: string
      dictType:
        description: 字典
        type: string
      fieldDesc:
        description: 中文名
        type: string
      fieldJson:
        description: FieldJson
        type: string
      fieldName:
        description: Field名
        type: string
      fieldSearchType:
        description: 搜索条件
        type: string
      fieldType:
        description: Field数据类型
        type: string
    type: object
  system.Meta:
    properties:
      closeTab:
        description: 自动关闭tab
        type: boolean
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      icon:
        description: 菜单图标
        type: string
      keepAlive:
        description: 是否缓存
        type: boolean
      title:
        description: 菜单名
        type: string
    type: object
  system.PolicyType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-comments:
      Backend: 后台
      Frontend: 前端
      Mobile: 移动端
    x-enum-descriptions:
    - 后台
    - 前端
    - 移动端
    x-enum-varnames:
    - Backend
    - Frontend
    - Mobile
  system.SysApi:
    properties:
      api_group:
        description: api组
        type: string
      createdAt:
        description: 创建时间
        type: string
      description:
        description: api中文描述
        type: string
      id:
        description: 主键ID
        type: integer
      method:
        description: 方法:创建POST(默认)|查看GET|更新PUT|删除DELETE
        type: string
      path:
        description: api路径
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysAuthority:
    properties:
      authorityId:
        description: 角色ID
        type: string
      authorityName:
        description: 角色名
        type: string
      children:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      createdAt:
        description: 创建时间
        type: string
      dataAuthorityId:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      defaultRouter:
        description: 默认菜单(默认dashboard)
        type: string
      deletedAt:
        type: string
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      parentId:
        description: 父角色ID
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysAutoCode:
    properties:
      createdAt:
        description: 创建时间
        type: string
      desc:
        type: string
      id:
        description: 主键ID
        type: integer
      label:
        type: string
      packageName:
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenu:
    properties:
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      children:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      component:
        description: 对应前端文件路径
        type: string
      createdAt:
        description: 创建时间
        type: string
      hidden:
        description: 是否在列表隐藏
        type: boolean
      id:
        description: 主键ID
        type: integer
      menuBtn:
        items:
          $ref: '#/definitions/system.SysBaseMenuBtn'
        type: array
      meta:
        allOf:
        - $ref: '#/definitions/system.Meta'
        description: 附加属性
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenuBtn:
    properties:
      createdAt:
        description: 创建时间
        type: string
      desc:
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        type: string
      sysBaseMenuID:
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenuParameter:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 地址栏携带参数的key
        type: string
      sysBaseMenuID:
        type: integer
      type:
        description: 地址栏携带参数为params还是query
        type: string
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 地址栏携带参数的值
        type: string
    type: object
  system.SysDictionary:
    properties:
      createdAt:
        description: 创建时间
        type: string
      desc:
        description: 描述
        type: string
      id:
        description: 主键ID
        type: integer
      name:
        description: 字典名（中）
        type: string
      status:
        description: 状态
        type: boolean
      sysDictionaryDetails:
        items:
          $ref: '#/definitions/system.SysDictionaryDetail'
        type: array
      type:
        description: 字典名（英）
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysDictionaryDetail:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      label:
        description: 展示值
        type: string
      sort:
        description: 排序标记
        type: integer
      status:
        description: 启用状态
        type: boolean
      sysDictionaryID:
        description: 关联标记
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 字典值
        type: integer
    type: object
  system.SysMenu:
    properties:
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      btns:
        additionalProperties:
          type: string
        type: object
      children:
        items:
          $ref: '#/definitions/system.SysMenu'
        type: array
      component:
        description: 对应前端文件路径
        type: string
      createdAt:
        description: 创建时间
        type: string
      hidden:
        description: 是否在列表隐藏
        type: boolean
      id:
        description: 主键ID
        type: integer
      menuBtn:
        items:
          $ref: '#/definitions/system.SysBaseMenuBtn'
        type: array
      menuId:
        type: string
      meta:
        allOf:
        - $ref: '#/definitions/system.Meta'
        description: 附加属性
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysOperationRecord:
    properties:
      agent:
        description: 代理
        type: string
      body:
        description: 请求Body
        type: string
      createdAt:
        description: 创建时间
        type: string
      error_message:
        description: 错误信息
        type: string
      id:
        description: 主键ID
        type: integer
      ip:
        description: 请求ip
        type: string
      latency:
        description: 延迟
        type: string
      method:
        description: 请求方法
        type: string
      path:
        description: 请求路径
        type: string
      resp:
        description: 响应Body
        type: string
      status:
        description: 请求状态
        type: integer
      type_port:
        $ref: '#/definitions/system.PolicyType'
      updatedAt:
        description: 更新时间
        type: string
      user:
        $ref: '#/definitions/system.SysUser'
      user_id:
        description: 用户id
        type: integer
    type: object
  system.SysUser:
    properties:
      activeColor:
        description: 活跃颜色
        type: string
      authorities:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      authority:
        $ref: '#/definitions/system.SysAuthority'
      authorityId:
        description: 用户角色ID
        type: string
      baseColor:
        description: 基础颜色
        type: string
      content:
        type: string
      createdAt:
        description: 创建时间
        type: string
      email:
        description: 用户邮箱
        type: string
      head_img:
        type: string
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      introduction:
        type: string
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 用户手机号
        type: string
      sideMode:
        description: 用户侧边主题
        type: string
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户登录名
        type: string
      uuid:
        description: 用户UUID
        type: string
    type: object
  system.System:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
info:
  contact: {}
paths:
  /api/createApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: 创建基础api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /api/deleteApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: 删除api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除api
      tags:
      - SysApi
  /api/deleteApisByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 删除选中Api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除选中Api
      tags:
      - SysApi
  /api/getAllApis:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取所有的Api 不分页,返回包括api列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取所有的Api 不分页
      tags:
      - SysApi
  /api/getApiById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 根据id获取api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 根据id获取api,返回包括api详情
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据id获取api
      tags:
      - SysApi
  /api/getApiList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 分页获取API列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SearchApiParams'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取API列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取API列表
  /api/updateApi:
    put:
      consumes:
      - application/json
      parameters:
      - description: api路径, api中文描述, api组, 方法
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: 修改基础api
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 修改基础api
  /article/createArticle:
    post:
      consumes:
      - application/json
      description: 创建新的文章
      parameters:
      - description: 文章信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.Article'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建文章
      tags:
      - Article
  /article/deleteArticle/{id}:
    delete:
      consumes:
      - application/json
      description: 根据文章ID删除指定文章
      parameters:
      - description: 文章ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除文章
      tags:
      - Article
  /article/deleteArticleByIds:
    delete:
      consumes:
      - application/json
      description: 根据ID列表批量删除文章
      parameters:
      - description: 文章ID列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 批量删除成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除文章
      tags:
      - Article
  /article/findArticle/{id}:
    get:
      description: 根据文章ID获取文章详情
      parameters:
      - description: 文章ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/app.Article'
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 文章不存在
          schema:
            $ref: '#/definitions/response.Response'
      summary: 根据ID获取文章
      tags:
      - Article
  /article/getArticleList:
    get:
      description: 分页获取文章列表，支持搜索和筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        maximum: 100
        minimum: 1
        name: pageSize
        type: integer
      - description: 文章标题搜索
        in: query
        name: title
        type: string
      - description: 文章状态
        in: query
        name: state
        type: integer
      - description: 是否首页显示
        in: query
        name: is_important
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResult'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/app.Article'
                        type: array
                      page:
                        type: integer
                      pageSize:
                        type: integer
                      total:
                        type: integer
                    type: object
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分页获取文章列表
      tags:
      - Article
  /article/getArticleReading:
    get:
      description: 获取指定用户的文章阅读量统计
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  properties:
                    reading_quantity:
                      type: integer
                  type: object
                msg:
                  type: string
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取文章阅读量
      tags:
      - Article
  /article/putArticleByIds:
    put:
      consumes:
      - application/json
      description: 批量更新文章的显示状态
      parameters:
      - description: 文章ID列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 批量更新成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量更新文章
      tags:
      - Article
  /article/updateArticle/{id}:
    put:
      consumes:
      - application/json
      description: 根据文章ID更新文章信息
      parameters:
      - description: 文章ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 文章信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.Article'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新文章
      tags:
      - Article
  /authority/copyAuthority:
    post:
      consumes:
      - application/json
      description: 基于现有角色创建新的角色副本
      parameters:
      - description: 角色拷贝信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.SysAuthorityCopyResponse'
      produces:
      - application/json
      responses:
        "200":
          description: 拷贝角色成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 拷贝角色
      tags:
      - Authority
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      description: 创建新的系统角色
      parameters:
      - description: 角色信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 创建角色成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - Authority
  /authority/deleteAuthority:
    delete:
      consumes:
      - application/json
      description: 删除指定的系统角色
      parameters:
      - description: 角色ID
        in: query
        name: authorityId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除角色成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - Authority
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取角色列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
      tags:
      - Authority
  /authority/setDataAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置角色资源权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 设置角色资源权限
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置角色资源权限
      tags:
      - Authority
  /authority/updateAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: 更新角色信息,返回包括系统角色详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - Authority
  /authorityBtn/canRemoveAuthorityBtn:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置权限按钮
      tags:
      - AuthorityBtn
  /authorityBtn/getAuthorityBtn:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id, 角色id, 选中的按钮id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAuthorityBtnReq'
      produces:
      - application/json
      responses:
        "200":
          description: 返回列表成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysAuthorityBtnRes'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取权限按钮
      tags:
      - AuthorityBtn
  /authorityBtn/setAuthorityBtn:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id, 角色id, 选中的按钮id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAuthorityBtnReq'
      produces:
      - application/json
      responses:
        "200":
          description: 返回列表成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置权限按钮
      tags:
      - AuthorityBtn
  /autoCode/createPackage:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建package
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: 创建package成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建package
      tags:
      - AutoCode
  /autoCode/createTemp:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建自动代码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 自动代码模板
      tags:
      - AutoCode
  /autoCode/delPackage:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建package
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAutoCode'
      produces:
      - application/json
      responses:
        "200":
          description: 删除package成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除package
      tags:
      - AutoCode
  /autoCode/delSysHistory:
    get:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 删除回滚记录
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除回滚记录
      tags:
      - AutoCode
  /autoCode/getColumn:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前表所有字段
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前表所有字段
      tags:
      - AutoCode
  /autoCode/getDatabase:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前所有数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前所有数据库
      tags:
      - AutoCode
  /autoCode/getMeta:
    get:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 获取meta信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取meta信息
      tags:
      - AutoCode
  /autoCode/getPackage:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 创建package成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取package
      tags:
      - AutoCode
  /autoCode/getSysHistory:
    post:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SysAutoHistory'
      produces:
      - application/json
      responses:
        "200":
          description: 查询回滚记录,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 查询回滚记录
      tags:
      - AutoCode
  /autoCode/getTables:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前数据库所有表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前数据库所有表
      tags:
      - AutoCode
  /autoCode/preview:
    post:
      consumes:
      - application/json
      parameters:
      - description: 预览创建代码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: 预览创建后的代码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 预览创建后的代码
      tags:
      - AutoCode
  /autoCode/rollback:
    get:
      consumes:
      - application/json
      parameters:
      - description: 请求参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RollBack'
      produces:
      - application/json
      responses:
        "200":
          description: 回滚自动生成代码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 回滚自动生成代码
      tags:
      - AutoCode
  /base/captcha:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 生成验证码,返回包括随机数id,base64,验证码长度
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: number
                data:
                  $ref: '#/definitions/response.SysCaptchaResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
      tags:
      - Base
  /base/captcha/img:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 生成验证码,返回包括随机数id,base64,验证码长度
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: number
                data:
                  $ref: '#/definitions/response.SysCaptchaResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 生成图片验证码
      tags:
      - Base
  /base/getToken/login:
    post:
      consumes:
      - application/json
      description: 用户登录获取 token，无需验证码
      parameters:
      - description: 登录信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginToken'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/server-fiber_model_system_response.LoginResponse'
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 登录失败
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户登录获取token
      tags:
      - Base
  /base/login:
    post:
      consumes:
      - application/json
      description: 用户登录获取 token 和用户信息
      parameters:
      - description: 登录信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/server-fiber_model_system_response.LoginResponse'
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 登录失败
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户登录
      tags:
      - Base
  /base_message/createBaseMessage:
    post:
      consumes:
      - application/json
      description: 创建新的基础消息
      parameters:
      - description: 基础消息信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.BaseMessage'
      produces:
      - application/json
      responses:
        "200":
          description: 创建基础消息成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建基础消息
      tags:
      - BaseMessage
  /base_message/getBaseMessage/{id}:
    get:
      consumes:
      - application/json
      description: 根据ID查找基础消息详情
      parameters:
      - description: 基础消息ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 查找基础消息成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/app.BaseMessage'
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 基础消息不存在
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 查找基础消息
      tags:
      - BaseMessage
  /base_message/updateBaseMessage/{id}:
    put:
      consumes:
      - application/json
      description: 根据ID更新基础消息信息
      parameters:
      - description: 基础消息ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 基础消息信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.BaseMessage'
      produces:
      - application/json
      responses:
        "200":
          description: 更新基础消息成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新基础消息
      tags:
      - BaseMessage
  /base_message/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传文件示例,返回包括文件详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.ResponseUploadFile'
                  - properties:
                      file:
                        $ref: '#/definitions/app.FileUploadAndDownload'
                    type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 上传文件示例
      tags:
      - backend upload
  /casbin/UpdateCasbin:
    post:
      consumes:
      - application/json
      description: 更新指定角色的API权限配置
      parameters:
      - description: 权限配置信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: 更新角色API权限成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新角色API权限
      tags:
      - Casbin
  /casbin/getPolicyPathByAuthorityId/{id}:
    get:
      consumes:
      - application/json
      description: 根据角色ID获取权限策略列表
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取权限列表成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    type: string
                  type: array
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取权限列表
      tags:
      - Casbin
  /comment/createComment:
    post:
      consumes:
      - application/json
      description: 创建新的评论
      parameters:
      - description: 评论信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: 创建评论成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建评论
      tags:
      - Comment
  /comment/deleteComment/{id}:
    delete:
      consumes:
      - application/json
      description: 根据评论ID删除指定评论
      parameters:
      - description: 评论ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除评论成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除评论
      tags:
      - Comment
  /comment/deleteCommentByIds:
    delete:
      consumes:
      - application/json
      description: 根据ID列表批量删除评论
      parameters:
      - description: 评论ID列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 批量删除评论成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除评论
      tags:
      - Comment
  /comment/getComment/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用id查询Comment
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: number
                data:
                  $ref: '#/definitions/app.Comment'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询Comment
      tags:
      - Comment
  /comment/getCommentList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: articleId
        type: integer
      - in: query
        name: content
        type: string
      - description: 是否为截图 1, 或 2
        in: query
        name: is_cropper
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: proportion
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: number
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResult'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/app.Comment'
                        type: array
                      page:
                        type: number
                      pageSize:
                        type: number
                      total:
                        type: number
                    type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取Comment列表
      tags:
      - Comment
  /comment/getCommentTreeList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: articleId
        type: integer
      - in: query
        name: content
        type: string
      - description: 是否为截图 1, 或 2
        in: query
        name: is_cropper
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: proportion
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: number
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResult'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/app.Comment'
                        type: array
                      page:
                        type: number
                      pageSize:
                        type: number
                      total:
                        type: number
                    type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 树状获取Comment列表
      tags:
      - Comment
  /comment/pariseComment:
    put:
      consumes:
      - application/json
      parameters:
      - description: 点赞
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.Praise'
      produces:
      - application/json
      responses:
        "200":
          description: 点赞成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: number
                data:
                  $ref: '#/definitions/app.Praise'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 点赞
      tags:
      - Comment
  /comment/updateComment/{id}:
    put:
      consumes:
      - application/json
      description: 根据评论ID更新评论信息
      parameters:
      - description: 评论ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 评论信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: 更新评论成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新评论
      tags:
      - Comment
  /customer/customer:
    post:
      consumes:
      - application/json
      description: 创建新的客户信息
      parameters:
      - description: 客户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: 创建客户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建客户
      tags:
      - ExaCustomer
  /customer/customer/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: 客户ID
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: 获取单一客户信息,返回包括客户详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ExaCustomerResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取单一客户信息
      tags:
      - ExaCustomer
  /customer/customer/{id}:
    delete:
      consumes:
      - application/json
      description: 根据客户ID删除指定客户
      parameters:
      - description: 客户ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除客户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除客户
      tags:
      - ExaCustomer
    put:
      consumes:
      - application/json
      description: 根据客户ID更新客户信息
      parameters:
      - description: 客户ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 客户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: 更新客户信息成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新客户信息
      tags:
      - ExaCustomer
  /customer/customerList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 是否为截图 1, 或 2
        in: query
        name: is_cropper
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: proportion
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取权限客户列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResult'
                  - properties:
                      list:
                        $ref: '#/definitions/example.ExaCustomer'
                    type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取权限客户列表
      tags:
      - ExaCustomer
  /email/emailTest:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 发送测试邮件
      tags:
      - System
  /email/sendEmail:
    post:
      parameters:
      - description: 发送邮件必须的参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.Email'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"发送成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 发送邮件
      tags:
      - System
  /excel/downloadTemplate:
    get:
      consumes:
      - multipart/form-data
      parameters:
      - description: 模板名称
        in: query
        name: fileName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: 下载模板
      tags:
      - excel
  /excel/exportExcel:
    post:
      consumes:
      - application/json
      description: 根据提供的数据导出Excel文件
      parameters:
      - description: 导出Excel文件信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExcelInfo'
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Excel文件
          schema:
            type: file
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 导出Excel
      tags:
      - excel
  /excel/importExcel:
    post:
      consumes:
      - multipart/form-data
      description: 上传并导入Excel文件到系统
      parameters:
      - description: 导入Excel文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 导入Excel文件成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 文件格式错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 导入Excel文件
      tags:
      - excel
  /excel/loadExcel:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 加载Excel数据,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 加载Excel数据
      tags:
      - excel
  /fileUploadAndDownload/breakpointContinue:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: an example for breakpoint resume, 断点续传示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 断点续传到服务器
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 断点续传到服务器
  /fileUploadAndDownload/deleteFile:
    delete:
      consumes:
      - application/json
      description: 根据文件ID删除指定文件
      parameters:
      - description: 文件信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaFileUploadAndDownload'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/deleteFileBreakpoint:
    delete:
      consumes:
      - multipart/form-data
      parameters:
      - description: Find the file, 删除缓存文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 删除缓存文件
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FileResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/editFileName:
    put:
      consumes:
      - application/json
      description: 编辑文件的名称或备注信息
      parameters:
      - description: 文件信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/example.ExaFileUploadAndDownload'
      produces:
      - application/json
      responses:
        "200":
          description: 编辑成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 编辑文件名或者备注
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/findFile:
    get:
      consumes:
      - multipart/form-data
      parameters:
      - description: Find the file, 查找文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 查找文件,返回包括文件详情
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FileResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 查找文件
      tags:
      - ExaFileUploadAndDownload
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件完成
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 创建文件,返回包括文件路径
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FilePathResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/findFileBreakpoint:
    get:
      consumes:
      - multipart/form-data
      parameters:
      - description: Find the file, 查找缓存文件列表
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 查找缓存文件列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.FileResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 查找缓存文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/getFileList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页文件列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResult'
                  - properties:
                      list:
                        $ref: '#/definitions/example.ExaFileUploadAndDownload'
                    type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页文件列表
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/removeChunk:
    delete:
      consumes:
      - multipart/form-data
      parameters:
      - description: 删除缓存切片
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 删除切片
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除切片
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传文件到服务器，支持图片裁剪
      parameters:
      - description: 上传文件
        in: formData
        name: file
        required: true
        type: file
      - default: '"0"'
        description: 是否保存到数据库
        in: query
        name: noSave
        type: string
      - default: 1
        description: 是否裁剪图片
        in: query
        name: is_cropper
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 上传文件成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ExaFileResponse'
                msg:
                  type: string
              type: object
        "400":
          description: 文件过大或格式错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 上传文件示例
      tags:
      - ExaFileUploadAndDownload
  /frontend-user/deleteUser/{id}:
    delete:
      consumes:
      - application/json
      description: 根据用户ID删除指定用户
      parameters:
      - description: 用户ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除用户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - User
  /frontend/comment:
    post:
      consumes:
      - application/json
      description: 为指定文章创建新评论
      parameters:
      - description: 评论信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/server-fiber_model_frontend.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: 评论成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 创建评论
      tags:
      - Frontend Comment
  /frontend/comment/{articleId}:
    get:
      description: 根据文章ID获取相关评论列表
      parameters:
      - description: 文章ID
        in: path
        minimum: 1
        name: articleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/server-fiber_model_frontend.Comment'
                  type: array
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取文章评论
      tags:
      - Frontend Comment
  /frontend/getImages:
    get:
      description: 获取前台展示的图片列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/app.FileUploadAndDownload'
                  type: array
                msg:
                  type: string
              type: object
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取图片列表
      tags:
      - Frontend Image
  /frontend/getTag/{id}:
    get:
      description: 根据标签ID获取标签及其关联的文章
      parameters:
      - description: 标签ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  properties:
                    tag:
                      items:
                        $ref: '#/definitions/app.Tag'
                      type: array
                  type: object
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取标签详情
      tags:
      - Frontend Tag
  /frontend/getTagList:
    get:
      description: 分页获取前台展示的标签列表
      parameters:
      - default: 1
        description: 页码
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        maximum: 100
        minimum: 1
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResult'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/app.Tag'
                        type: array
                    type: object
                msg:
                  type: string
              type: object
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取标签列表
      tags:
      - Frontend Tag
  /frontend/login:
    post:
      consumes:
      - application/json
      description: 前台用户登录获取 token
      parameters:
      - description: 登录信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/server-fiber_model_system_response.LoginResponse'
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 登录失败
          schema:
            $ref: '#/definitions/response.Response'
      summary: 前台用户登录
      tags:
      - Frontend User
  /getArticle/{id}:
    get:
      description: 根据文章ID获取文章详细信息
      parameters:
      - description: 文章ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/app.Article'
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 文章不存在
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取文章详情
      tags:
      - Frontend Article
  /getArticleList:
    get:
      description: 分页获取前台文章列表，支持搜索和筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        maximum: 100
        minimum: 1
        name: pageSize
        type: integer
      - description: 文章标题搜索
        in: query
        name: title
        type: string
      - description: 文章状态
        in: query
        name: state
        type: integer
      - description: 是否首页显示
        in: query
        name: is_important
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResult'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/app.Article'
                        type: array
                      page:
                        type: integer
                      pageSize:
                        type: integer
                      total:
                        type: integer
                    type: object
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分页获取文章列表
      tags:
      - Frontend Article
  /getSearchArticle/{name}/{value}:
    get:
      description: 根据标签或文章名称搜索相关内容
      parameters:
      - description: 搜索类型
        enum:
        - tags
        - articles
        in: path
        name: name
        required: true
        type: string
      - description: 搜索值
        in: path
        name: value
        required: true
        type: string
      - description: 排序方式
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 搜索成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/app.Article'
                  type: array
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 搜索文章
      tags:
      - Frontend Article
  /init/checkdb:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      summary: 是否进行初始化
      tags:
      - CheckDB
  /init/initdb:
    post:
      parameters:
      - description: 初始化数据库参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.InitDB'
      produces:
      - application/json
      responses:
        "200":
          description: 初始化用户数据库
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 初始化用户数据库
      tags:
      - InitDB
  /jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: jwt加入黑名单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: jwt加入黑名单
      tags:
      - Jwt
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: 新增菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 新增菜单
      tags:
      - Menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      description: 为指定角色添加菜单权限
      parameters:
      - description: 菜单权限信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddMenuAuthorityInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 增加菜单和角色关联关系成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 增加菜单和角色关联关系
      tags:
      - AuthorityMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 删除菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - Menu
  /menu/getBaseMenuById/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: 根据id获取菜单,返回包括系统菜单列表
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysBaseMenuResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 根据id获取菜单
      tags:
      - Menu
  /menu/getBaseMenuTree:
    get:
      description: 获取系统所有基础菜单的树形结构
      produces:
      - application/json
      responses:
        "200":
          description: 获取基础菜单树成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/system.SysBaseMenu'
                  type: array
                msg:
                  type: string
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取基础菜单树
      tags:
      - AuthorityMenu
  /menu/getMenu:
    get:
      description: 根据用户权限获取可访问的菜单树
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户动态路由成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/system.SysMenu'
                  type: array
                msg:
                  type: string
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenuAuthority:
    get:
      consumes:
      - application/json
      description: 获取指定角色可访问的菜单列表
      parameters:
      - description: 角色ID
        in: query
        name: authorityId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取指定角色菜单成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/system.SysMenu'
                  type: array
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取指定角色菜单
      tags:
      - AuthorityMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取基础menu列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - Menu
  /menu/updateBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: 更新菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - Menu
  /mobile/getUserInfo:
    get:
      description: 根据用户ID获取移动端用户详细信息
      parameters:
      - description: 用户ID
        in: header
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取移动端用户信息
      tags:
      - Mobile Login
  /mobile/login:
    post:
      consumes:
      - application/json
      description: 移动端用户登录获取用户信息
      parameters:
      - description: 登录信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/mobile.Login'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 移动端用户登录
      tags:
      - Mobile Login
  /mobile/register:
    post:
      consumes:
      - application/json
      description: 移动端用户注册新账号
      parameters:
      - description: 注册信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/mobile.Register'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 移动端用户注册
      tags:
      - Mobile Register
  /mobile/updateMobileUser:
    put:
      consumes:
      - application/json
      description: 更新移动端用户的基本信息
      parameters:
      - description: 用户ID
        in: header
        name: user_id
        required: true
        type: string
      - description: 用户更新信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.MobileUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新移动端用户信息
      tags:
      - Mobile Login
  /mobile/updatePassword:
    put:
      consumes:
      - application/json
      description: 更新移动端用户的登录密码
      parameters:
      - description: 密码更新信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.MobileUpdatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新移动端用户密码
      tags:
      - Mobile Login
  /mobileUser/createMobileUser:
    post:
      consumes:
      - application/json
      description: 创建新的移动端用户
      parameters:
      - description: 移动端用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/mobile.MobileUser'
      produces:
      - application/json
      responses:
        "200":
          description: 创建移动端用户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建移动端用户
      tags:
      - MobileUser
  /mobileUser/deleteMobileUser/{id}:
    delete:
      consumes:
      - application/json
      description: 根据用户ID删除指定移动端用户
      parameters:
      - description: 用户ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除移动端用户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除移动端用户
      tags:
      - MobileUser
  /mobileUser/deleteMobileUserByIds:
    delete:
      consumes:
      - application/json
      description: 根据ID列表批量删除移动端用户
      parameters:
      - description: 用户ID列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 创建移动端用户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除移动端用户
      tags:
      - MobileUser
  /mobileUser/findMobileUser/:id:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: avatar
        type: string
      - in: query
        name: content
        type: string
      - in: query
        name: cover
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: gender
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: Password string `json:"password" form:"password" gorm:"column:password;comment:密码;size:100;"`
        in: query
        name: industry
        type: integer
      - in: query
        name: nickname
        type: string
      - in: query
        name: phone
        type: string
      - in: query
        name: realname
        type: string
      - in: query
        name: sign
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询MobileUser
      tags:
      - MobileUser
  /mobileUser/getMobileUserList:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: avatar
        type: string
      - in: query
        name: content
        type: string
      - in: query
        name: cover
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: gender
        type: integer
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: Password string `json:"password" form:"password" gorm:"column:password;comment:密码;size:100;"`
        in: query
        name: industry
        type: integer
      - description: 是否为截图 1, 或 2
        in: query
        name: is_cropper
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: nickname
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: phone
        type: string
      - in: query
        name: proportion
        type: string
      - in: query
        name: realname
        type: string
      - in: query
        name: sign
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取MobileUser列表
      tags:
      - MobileUser
  /mobileUser/updateMobileUser:
    put:
      consumes:
      - application/json
      description: 更新移动端用户信息
      parameters:
      - description: 移动端用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/mobile.MobileUser'
      produces:
      - application/json
      responses:
        "200":
          description: 更新移动端用户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新移动端用户
      tags:
      - MobileUser
  /sysDictionary/createSysDictionary:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: 创建SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/deleteSysDictionary/:id:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: 删除SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/findSysDictionary:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 描述
        in: query
        name: desc
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 字典名（中）
        in: query
        name: name
        type: string
      - description: 状态
        in: query
        name: status
        type: boolean
      - description: 字典名（英）
        in: query
        name: type
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 用id查询SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysDictionary
      tags:
      - SysDictionary
  /sysDictionary/getSysDictionaryList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 描述
        in: query
        name: desc
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 是否为截图 1, 或 2
        in: query
        name: is_cropper
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 字典名（中）
        in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: proportion
        type: string
      - description: 状态
        in: query
        name: status
        type: boolean
      - description: 字典名（英）
        in: query
        name: type
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取SysDictionary列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysDictionary列表
      tags:
      - SysDictionary
  /sysDictionary/updateSysDictionary/:id:
    put:
      consumes:
      - application/json
      parameters:
      - description: SysDictionary模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionary'
      produces:
      - application/json
      responses:
        "200":
          description: 更新SysDictionary
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新SysDictionary
      tags:
      - SysDictionary
  /sysDictionaryDetail/createSysDictionaryDetail:
    post:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: 创建SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/deleteSysDictionaryDetail/:id:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysDictionaryDetail模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: 删除SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/findSysDictionaryDetail/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 展示值
        in: query
        name: label
        type: string
      - description: 排序标记
        in: query
        name: sort
        type: integer
      - description: 启用状态
        in: query
        name: status
        type: boolean
      - description: 关联标记
        in: query
        name: sysDictionaryID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 字典值
        in: query
        name: value
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用id查询SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/getSysDictionaryDetailList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 是否为截图 1, 或 2
        in: query
        name: is_cropper
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 展示值
        in: query
        name: label
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: proportion
        type: string
      - description: 排序标记
        in: query
        name: sort
        type: integer
      - description: 启用状态
        in: query
        name: status
        type: boolean
      - description: 关联标记
        in: query
        name: sysDictionaryID
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 字典值
        in: query
        name: value
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取SysDictionaryDetail列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysDictionaryDetail列表
      tags:
      - SysDictionaryDetail
  /sysDictionaryDetail/updateSysDictionaryDetail:
    put:
      consumes:
      - application/json
      parameters:
      - description: 更新SysDictionaryDetail
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysDictionaryDetail'
      produces:
      - application/json
      responses:
        "200":
          description: 更新SysDictionaryDetail
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新SysDictionaryDetail
      tags:
      - SysDictionaryDetail
  /sysOperationRecord/createSysOperationRecord:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: 创建SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 创建SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecord:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SysOperationRecord模型
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysOperationRecord'
      produces:
      - application/json
      responses:
        "200":
          description: 删除SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/deleteSysOperationRecordByIds:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 批量删除SysOperationRecord
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 批量删除SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 批量删除SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/findSysOperationRecord/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: 代理
        in: query
        name: agent
        type: string
      - description: 请求Body
        in: query
        name: body
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 错误信息
        in: query
        name: error_message
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 请求ip
        in: query
        name: ip
        type: string
      - description: 延迟
        in: query
        name: latency
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 请求路径
        in: query
        name: path
        type: string
      - description: 响应Body
        in: query
        name: resp
        type: string
      - description: 请求状态
        in: query
        name: status
        type: integer
      - enum:
        - 0
        - 1
        - 2
        in: query
        name: type_port
        type: integer
        x-enum-comments:
          Backend: 后台
          Frontend: 前端
          Mobile: 移动端
        x-enum-descriptions:
        - 后台
        - 前端
        - 移动端
        x-enum-varnames:
        - Backend
        - Frontend
        - Mobile
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 用户id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用id查询SysOperationRecord
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询SysOperationRecord
      tags:
      - SysOperationRecord
  /sysOperationRecord/getSysOperationRecordList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 代理
        in: query
        name: agent
        type: string
      - description: 请求Body
        in: query
        name: body
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 错误信息
        in: query
        name: error_message
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 请求ip
        in: query
        name: ip
        type: string
      - description: 是否为截图 1, 或 2
        in: query
        name: is_cropper
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 延迟
        in: query
        name: latency
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - description: 请求路径
        in: query
        name: path
        type: string
      - in: query
        name: proportion
        type: string
      - description: 响应Body
        in: query
        name: resp
        type: string
      - description: 请求状态
        in: query
        name: status
        type: integer
      - enum:
        - 0
        - 1
        - 2
        in: query
        name: type_port
        type: integer
        x-enum-comments:
          Backend: 后台
          Frontend: 前端
          Mobile: 移动端
        x-enum-descriptions:
        - 后台
        - 前端
        - 移动端
        x-enum-varnames:
        - Backend
        - Frontend
        - Mobile
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      - description: 用户id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取SysOperationRecord列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取SysOperationRecord列表
      tags:
      - SysOperationRecord
  /system/getServerInfo:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 获取服务器信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取服务器信息
      tags:
      - System
  /system/getSystemConfig:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 获取配置文件内容,返回包括系统配置
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取配置文件内容
      tags:
      - System
  /system/reloadSystem:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 重启系统
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 重启系统
      tags:
      - System
  /system/setSystemConfig:
    put:
      parameters:
      - description: 设置配置文件内容
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.System'
      produces:
      - application/json
      responses:
        "200":
          description: 设置配置文件内容
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置配置文件内容
      tags:
      - System
  /tag/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":app.Tag,"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询Tag
      tags:
      - Tag
  /tag/createTag:
    post:
      consumes:
      - application/json
      description: 创建新的标签
      parameters:
      - description: 标签信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.Tag'
      produces:
      - application/json
      responses:
        "200":
          description: 创建标签成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建标签
      tags:
      - Tag
  /tag/deleteTag/{id}:
    delete:
      consumes:
      - application/json
      description: 根据标签ID删除指定标签
      parameters:
      - description: 标签ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除标签成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除标签
      tags:
      - Tag
  /tag/deleteTagByIds:
    delete:
      consumes:
      - application/json
      description: 根据ID列表批量删除标签
      parameters:
      - description: 标签ID列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 批量删除标签成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除标签
      tags:
      - Tag
  /tag/getTagList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - description: 是否为截图 1, 或 2
        in: query
        name: is_cropper
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - in: query
        name: name
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: proportion
        type: string
      - in: query
        name: status
        type: integer
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":app.Tag[],total=integer,"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取Tag列表
      tags:
      - Tag
  /tag/updateTag:
    put:
      consumes:
      - application/json
      description: 更新标签信息
      parameters:
      - description: 标签信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.Tag'
      produces:
      - application/json
      responses:
        "200":
          description: 更新标签成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新标签
      tags:
      - Tag
  /tasking/start:
    get:
      consumes:
      - application/json
      description: 启动指定的定时任务
      parameters:
      - description: 任务名称
        in: query
        name: task
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 启动任务成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 启动任务
      tags:
      - Tasking
  /tasking/stop:
    get:
      consumes:
      - application/json
      description: 停止指定的定时任务
      parameters:
      - description: 任务名称
        in: query
        name: task
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 停止任务成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 停止任务
      tags:
      - Tasking
  /user/SetSelfInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /user/admin_register:
    post:
      parameters:
      - description: 用户名, 昵称, 密码, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: 用户注册账号,返回包括用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      summary: 用户注册账号
      tags:
      - SysUser
  /user/changePassword:
    post:
      parameters:
      - description: 用户名, 原密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordStruct'
      produces:
      - application/json
      responses:
        "200":
          description: 用户修改密码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/createUser:
    post:
      consumes:
      - application/json
      description: 创建新的应用用户
      parameters:
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.User'
      produces:
      - application/json
      responses:
        "200":
          description: 创建用户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                data:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建用户
      tags:
      - User
  /user/deleteUser/{id}:
    delete:
      consumes:
      - application/json
      description: 根据用户ID删除指定用户
      parameters:
      - description: 用户ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除用户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: 不能删除自己
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - SysUser
  /user/deleteUserByIds:
    delete:
      consumes:
      - application/json
      description: 根据ID列表批量删除用户
      parameters:
      - description: 用户ID列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 批量删除用户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除用户
      tags:
      - User
  /user/findUser/:id:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: content
        type: string
      - description: 创建时间
        in: query
        name: createdAt
        type: string
      - in: query
        name: headImg
        type: string
      - in: query
        name: header
        type: string
      - description: 主键ID
        in: query
        name: id
        type: integer
      - in: query
        name: introduction
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: password
        type: string
      - description: 更新时间
        in: query
        name: updatedAt
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: number
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用id查询User
      tags:
      - User
  /user/getUserCount:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 获取人员总数
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取人员总数
      tags:
      - SysUser
  /user/getUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - SysUser
  /user/getUserList:
    get:
      consumes:
      - application/json
      parameters:
      - description: 是否为截图 1, 或 2
        in: query
        name: is_cropper
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        type: integer
      - in: query
        name: proportion
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取用户列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/resetPassword:
    post:
      parameters:
      - description: ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 重置用户密码
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 重置用户密码
      tags:
      - SysUser
  /user/setUserAuthorities:
    post:
      consumes:
      - application/json
      description: 设置指定用户的多个角色权限
      parameters:
      - description: 用户权限信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuthorities'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户权限成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 设置用户权限
      tags:
      - SysUser
  /user/setUserAuthority:
    post:
      consumes:
      - application/json
      description: 更改指定用户的角色权限
      parameters:
      - description: 用户权限信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户权限成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更改用户权限
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      description: 设置指定用户的基本信息
      parameters:
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户信息成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /user/updateUser/{id}:
    put:
      consumes:
      - application/json
      description: 根据用户ID更新用户信息
      parameters:
      - description: 用户ID
        in: path
        minimum: 1
        name: id
        required: true
        type: integer
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/app.User'
      produces:
      - application/json
      responses:
        "200":
          description: 更新用户成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                code:
                  type: integer
                msg:
                  type: string
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新用户
      tags:
      - User
swagger: "2.0"
